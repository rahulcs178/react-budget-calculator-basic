{"version":3,"sources":["Components/ExpenseItem.js","Components/ExpenseList.js","Components/ExpenseForm.js","Components/Alert.js","App.js","serviceWorker.js","index.js"],"names":["ExpenseItem","expense","handleDelete","handleEdit","id","charge","amount","className","aria-label","onClick","ExpenseList","expenses","handleClearItems","map","key","length","ExpenseForm","handleCharge","handleAmount","handleSubmit","edit","onSubmit","htmlFor","type","name","value","onChange","Alert","text","initialsExpenses","localStorage","getItem","JSON","parse","App","useState","setExpenses","setCharge","setAmount","show","alert","setAlert","setEdit","setId","useEffect","console","log","setItem","stringify","handleAlert","setTimeout","e","target","preventDefault","tempexpense","item","singleExpense","uuidv4","find","tempExpenses","filter","reduce","acc","curr","parseInt","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"iQAkCeA,EA9BK,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,QAASC,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,WACpCC,EAAuBH,EAAvBG,GAAIC,EAAmBJ,EAAnBI,OAAQC,EAAWL,EAAXK,OACpB,OACE,wBAAIC,UAAU,QACZ,yBAAKA,UAAU,QACb,0BAAMA,UAAU,WAAWF,GAC3B,0BAAME,UAAU,UACd,kBAAC,IAAD,MADF,IACeD,IAGjB,6BACE,4BACEC,UAAU,WACVC,aAAW,cACXC,QAAS,kBAAMN,EAAWC,KAE1B,kBAAC,IAAD,OAEF,4BACEG,UAAU,YACVC,aAAW,gBACXC,QAAS,kBAAMP,EAAaE,KAE5B,kBAAC,IAAD,UCMKM,EA9BK,SAAC,GAKd,IAJLC,EAII,EAJJA,SACAC,EAGI,EAHJA,iBACAV,EAEI,EAFJA,aACAC,EACI,EADJA,WAEA,OACE,oCACE,wBAAII,UAAU,QACXI,EAASE,KAAI,SAACZ,GACb,OACE,kBAAC,EAAD,CACEa,IAAKb,EAAQG,GACbH,QAASA,EACTE,WAAYA,EACZD,aAAcA,QAKrBS,EAASI,OAAS,GACjB,4BAAQR,UAAU,MAAME,QAASG,GAAjC,iBAEE,kBAAC,IAAD,CAAUL,UAAU,gBCmBfS,EA1CK,SAAC,GAOd,IANLX,EAMI,EANJA,OACAC,EAKI,EALJA,OACAW,EAII,EAJJA,aACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,aACAC,EACI,EADJA,KAEA,OACE,0BAAMC,SAAUF,GACd,yBAAKZ,UAAU,eACb,yBAAKA,UAAU,cACb,2BAAOe,QAAQ,UAAf,UACA,2BACEC,KAAK,OACLhB,UAAU,eACVH,GAAG,SACHoB,KAAK,SACLC,MAAOpB,EACPqB,SAAUT,KAGd,yBAAKV,UAAU,cACb,2BAAOe,QAAQ,UAAf,UACA,2BACEC,KAAK,SACLhB,UAAU,eACVH,GAAG,SACHoB,KAAK,SACLC,MAAOnB,EACPoB,SAAUR,MAIhB,4BAAQK,KAAK,SAAShB,UAAU,OAC7Ba,EAAO,OAAS,SACjB,kBAAC,IAAD,CAAQb,UAAU,gBCjCXoB,EAJD,SAAC,GAAoB,IAAlBJ,EAAiB,EAAjBA,KAAMK,EAAW,EAAXA,KACrB,OAAO,yBAAKrB,UAAS,sBAAiBgB,IAASK,I,QCS3CC,EAAmBC,aAAaC,QAAQ,YAC1CC,KAAKC,MAAMH,aAAaC,QAAQ,aAChC,GAwHWG,MAvHf,WAAgB,IAAD,EACmBC,mBAASN,GAD5B,mBACNlB,EADM,KACIyB,EADJ,OAGeD,mBAAS,IAHxB,mBAGN9B,EAHM,KAGEgC,EAHF,OAKeF,mBAAS,IALxB,mBAKN7B,EALM,KAKEgC,EALF,OAOaH,mBAAS,CAAEI,MAAM,IAP9B,mBAONC,EAPM,KAOCC,EAPD,OASWN,oBAAS,GATpB,mBASNf,EATM,KASAsB,EATA,OAUOP,mBAAS,GAVhB,mBAUN/B,EAVM,KAUFuC,EAVE,KAYbC,qBAAU,WACRC,QAAQC,IAAI,qBACZhB,aAAaiB,QAAQ,WAAYf,KAAKgB,UAAUrC,MAC/C,CAACA,IAEJ,IAUMsC,EAAc,SAAC,GAAoB,IAAlB1B,EAAiB,EAAjBA,KAAMK,EAAW,EAAXA,KAC3Ba,EAAS,CAAEF,MAAM,EAAMhB,OAAMK,SAC7BsB,YAAW,WACTT,EAAS,CAAEF,MAAM,MAChB,MAsDL,OACE,oCACGC,EAAMD,MAAQ,kBAAC,EAAD,CAAOhB,KAAMiB,EAAMjB,KAAMK,KAAMY,EAAMZ,OACpD,kBAAC,EAAD,MACA,iDACA,0BAAMrB,UAAU,OACd,kBAAC,EAAD,CACEF,OAAQA,EACRC,OAAQA,EACRW,aA7Ea,SAACkC,GAEpBd,EAAUc,EAAEC,OAAO3B,QA4EbP,aAzEa,SAACiC,GAEpBb,EAAUa,EAAEC,OAAO3B,QAwEbN,aA9Da,SAACgC,GAGpB,GAFAA,EAAEE,iBAEa,KAAXhD,GAAiBC,EAAS,EAAG,CAC/B,GAAIc,EAAM,CACR,IAAIkC,EAAc3C,EAASE,KAAI,SAAC0C,GAC9B,OAAOA,EAAKnD,KAAOA,EAAZ,2BAAsBmD,GAAtB,IAA4BlD,SAAQC,WAAWiD,KAExDnB,EAAYkB,GACZZ,GAAQ,GACRO,EAAY,CAAE1B,KAAM,UAAWK,KAAM,oBAChC,CACL,IAAM4B,EAAgB,CAAEpD,GAAIqD,cAAUpD,SAAQC,UAC9C8B,EAAY,CAACoB,GAAF,mBAAoB7C,KAC/BsC,EAAY,CAAE1B,KAAM,UAAWK,KAAM,eAGvCS,EAAU,IACVC,EAAU,SAGVW,EAAY,CAAE1B,KAAM,SAAUK,KAAM,+BA0ChCR,KAAMA,IAER,kBAAC,EAAD,CACET,SAAUA,EACVC,iBA1CiB,WAEvBwB,EAAY,IACZa,EAAY,CAAE1B,KAAM,SAAUK,KAAM,qBAwC9BzB,WAtCW,SAACC,GAElB,IAAIH,EAAUU,EAAS+C,MAAK,SAACH,GAAD,OAAUA,EAAKnD,KAAOA,KAE5CC,EAAmBJ,EAAnBI,OAAQC,EAAWL,EAAXK,OACd+B,EAAUhC,GACViC,EAAUhC,GACVoC,GAAQ,GACRC,EAAMvC,IA+BAF,aA7Ba,SAACE,GAEpB,IAAIuD,EAAehD,EAASiD,QAAO,SAACL,GAAD,OAAUA,EAAKnD,KAAOA,KACzDyC,QAAQC,IAAIa,GACZvB,EAAYuB,GACZV,EAAY,CAAE1B,KAAM,SAAUK,KAAM,iBACpCS,EAAU,IACVC,EAAU,IACVI,GAAQ,OAwBN,+CACmB,IACjB,0BAAMnC,UAAU,SACd,kBAAC,IAAD,MAAY,IACXI,EAASkD,QAAO,SAACC,EAAKC,GACrB,OAAQD,EAAOE,SAASD,EAAKzD,UAC5B,OCnHO2D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLrC,QAAQqC,MAAMA,EAAMC,c","file":"static/js/main.1bdf2725.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { MdDelete, MdEdit } from \"react-icons/md\";\r\nimport { BiRupee } from \"react-icons/bi\";\r\n\r\nconst ExpenseItem = ({ expense, handleDelete, handleEdit }) => {\r\n  const { id, charge, amount } = expense;\r\n  return (\r\n    <li className=\"item\">\r\n      <div className=\"info\">\r\n        <span className=\"expense\">{charge}</span>\r\n        <span className=\"amount\">\r\n          <BiRupee /> {amount}\r\n        </span>\r\n      </div>\r\n      <div>\r\n        <button\r\n          className=\"edit-btn\"\r\n          aria-label=\"edit button\"\r\n          onClick={() => handleEdit(id)}\r\n        >\r\n          <MdEdit />\r\n        </button>\r\n        <button\r\n          className=\"clear-btn\"\r\n          aria-label=\"delete button\"\r\n          onClick={() => handleDelete(id)}\r\n        >\r\n          <MdDelete />\r\n        </button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\nimport Item from \"./ExpenseItem\";\r\nimport { MdDelete } from \"react-icons/md\";\r\nconst ExpenseList = ({\r\n  expenses,\r\n  handleClearItems,\r\n  handleDelete,\r\n  handleEdit,\r\n}) => {\r\n  return (\r\n    <>\r\n      <ul className=\"list\">\r\n        {expenses.map((expense) => {\r\n          return (\r\n            <Item\r\n              key={expense.id}\r\n              expense={expense}\r\n              handleEdit={handleEdit}\r\n              handleDelete={handleDelete}\r\n            ></Item>\r\n          );\r\n        })}\r\n      </ul>\r\n      {expenses.length > 0 && (\r\n        <button className=\"btn\" onClick={handleClearItems}>\r\n          clear expenses\r\n          <MdDelete className=\"btn-icon\" />\r\n        </button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExpenseList;\r\n","import React from \"react\";\r\nimport { MdSend } from \"react-icons/md\";\r\n\r\nconst ExpenseForm = ({\r\n  charge,\r\n  amount,\r\n  handleCharge,\r\n  handleAmount,\r\n  handleSubmit,\r\n  edit,\r\n}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"form-center\">\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"charge\">charge</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"charge\"\r\n            name=\"charge\"\r\n            value={charge}\r\n            onChange={handleCharge}\r\n          ></input>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"amount\">amount</label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            id=\"amount\"\r\n            name=\"amount\"\r\n            value={amount}\r\n            onChange={handleAmount}\r\n          ></input>\r\n        </div>\r\n      </div>\r\n      <button type=\"submit\" className=\"btn\">\r\n        {edit ? \"edit\" : \"submit\"}\r\n        <MdSend className=\"btn-icon\"></MdSend>\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React from \"react\";\r\n\r\nconst Alert = ({ type, text }) => {\r\n  return <div className={`alert alert-${type}`}>{text}</div>;\r\n};\r\n\r\nexport default Alert;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport ExpenseList from \"./Components/ExpenseList\";\nimport ExpenseForm from \"./Components/ExpenseForm\";\nimport Alert from \"./Components/Alert\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { BiRupee } from \"react-icons/bi\";\n// const initialsExpenses = [\n//   { id: uuidv4(), charge: \"rent\", amount: 1600 },\n//   { id: uuidv4(), charge: \"car repair\", amount: 400 },\n//   { id: uuidv4(), charge: \"credit card bill\", amount: 900 },\n// ];\nconst initialsExpenses = localStorage.getItem(\"expenses\")\n  ? JSON.parse(localStorage.getItem(\"expenses\"))\n  : [];\nfunction App() {\n  const [expenses, setExpenses] = useState(initialsExpenses);\n\n  const [charge, setCharge] = useState(\"\");\n\n  const [amount, setAmount] = useState(\"\");\n\n  const [alert, setAlert] = useState({ show: false });\n\n  const [edit, setEdit] = useState(false);\n  const [id, setId] = useState(0);\n\n  useEffect(() => {\n    console.log(\"we call useEffect\");\n    localStorage.setItem(\"expenses\", JSON.stringify(expenses));\n  }, [expenses]);\n\n  const handleCharge = (e) => {\n    // console.log(`charge: ${e.target.value}`);\n    setCharge(e.target.value);\n  };\n\n  const handleAmount = (e) => {\n    // console.log(`amount: ${e.target.value}`);\n    setAmount(e.target.value);\n  };\n\n  const handleAlert = ({ type, text }) => {\n    setAlert({ show: true, type, text });\n    setTimeout(() => {\n      setAlert({ show: false });\n    }, 3000);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log(charge, amount);\n    if (charge !== \"\" && amount > 0) {\n      if (edit) {\n        let tempexpense = expenses.map((item) => {\n          return item.id === id ? { ...item, charge, amount } : item;\n        });\n        setExpenses(tempexpense);\n        setEdit(false);\n        handleAlert({ type: \"success\", text: \"item Edited\" });\n      } else {\n        const singleExpense = { id: uuidv4(), charge, amount };\n        setExpenses([singleExpense, ...expenses]);\n        handleAlert({ type: \"success\", text: \"item added\" });\n      }\n\n      setCharge(\"\");\n      setAmount(\"\");\n    } else {\n      //\n      handleAlert({ type: \"danger\", text: \"charge or amount is empty\" });\n    }\n  };\n  // console.log(expenses);\n  const handleClearItems = () => {\n    // console.log(\"Clear all Items\");\n    setExpenses([]);\n    handleAlert({ type: \"danger\", text: \"Clear All Items\" });\n  };\n  const handleEdit = (id) => {\n    // console.log(`Item Edited - ${id}`);\n    let expense = expenses.find((item) => item.id === id);\n    // console.log(expense);\n    let { charge, amount } = expense;\n    setCharge(charge);\n    setAmount(amount);\n    setEdit(true);\n    setId(id);\n  };\n  const handleDelete = (id) => {\n    // console.log(`Item Deleted - ${id}`);\n    let tempExpenses = expenses.filter((item) => item.id !== id);\n    console.log(tempExpenses);\n    setExpenses(tempExpenses);\n    handleAlert({ type: \"danger\", text: \"Item Deleted\" });\n    setCharge(\"\");\n    setAmount(\"\");\n    setEdit(false);\n  };\n\n  return (\n    <>\n      {alert.show && <Alert type={alert.type} text={alert.text} />}\n      <Alert></Alert>\n      <h1>Budget Calculator</h1>\n      <main className=\"App\">\n        <ExpenseForm\n          charge={charge}\n          amount={amount}\n          handleCharge={handleCharge}\n          handleAmount={handleAmount}\n          handleSubmit={handleSubmit}\n          edit={edit}\n        ></ExpenseForm>\n        <ExpenseList\n          expenses={expenses}\n          handleClearItems={handleClearItems}\n          handleEdit={handleEdit}\n          handleDelete={handleDelete}\n        ></ExpenseList>\n      </main>\n      <h1>\n        total spending :{\" \"}\n        <span className=\"total\">\n          <BiRupee />{\" \"}\n          {expenses.reduce((acc, curr) => {\n            return (acc += parseInt(curr.amount));\n          }, 0)}\n        </span>\n      </h1>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}